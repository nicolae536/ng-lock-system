{"version":3,"file":"util.service.js","sourceRoot":"","sources":["../../src/util.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\n\r\n@Injectable()\r\nexport class UtilService {\r\n    destroySubscription(s: Subscription | Subscription[]): number {\r\n        if (this.isNullOrUndefined(s)) {\r\n            return;\r\n        }\r\n\r\n        const arr = this.mapToArray<Subscription>(s);\r\n        let numberOfSubscriptionsRemained = 0;\r\n        for (const subs of arr) {\r\n            if (this.isNullOrUndefined(s) ||\r\n                !this.isSubscription(subs)) {\r\n                numberOfSubscriptionsRemained++;\r\n                continue;\r\n            }\r\n\r\n            subs.unsubscribe();\r\n        }\r\n\r\n        return numberOfSubscriptionsRemained;\r\n    }\r\n\r\n    cloneObjectWithoutProps<T>(value: Object, omitProps: string | string[] = []): T {\r\n        if (this.isNullOrUndefined(value) ||\r\n            !this.isObject(value)) {\r\n            return;\r\n        }\r\n\r\n        const oProps = this.mapToArray<string>(omitProps);\r\n        const retVal = {};\r\n        for (const key in value) {\r\n            if (oProps.indexOf(key) !== -1) {\r\n                continue;\r\n            }\r\n\r\n            retVal[key] = value[key];\r\n        }\r\n\r\n        return retVal as T;\r\n    }\r\n\r\n    isNullOrUndefined(value: any): boolean {\r\n        return value === null || value === undefined;\r\n    }\r\n\r\n    mapToArray<T>(value: any): T[] {\r\n        if (Array.isArray(value)) {\r\n            return value as T[];\r\n        }\r\n\r\n        return [value];\r\n    }\r\n\r\n    isSubscription(subs: any): boolean {\r\n        return subs && subs.unsubscribe;\r\n    }\r\n\r\n    isObject(subs: any): boolean {\r\n        return this.isInstanceOf(Object, subs);\r\n    }\r\n\r\n    isInstanceOf(typeClass: any, value: any): boolean {\r\n        return value instanceof typeClass;\r\n    }\r\n\r\n    getId() {\r\n        return this.getFourRandomChars() + this.getFourRandomChars() + \"-\" +\r\n            this.getFourRandomChars() + \"-\" +\r\n            this.getFourRandomChars() + \"-\" +\r\n            this.getFourRandomChars() + \"-\" +\r\n            this.getFourRandomChars() + this.getFourRandomChars() + this.getFourRandomChars();\r\n    }\r\n\r\n    private getFourRandomChars() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16)\r\n            .substring(1);\r\n    }\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}